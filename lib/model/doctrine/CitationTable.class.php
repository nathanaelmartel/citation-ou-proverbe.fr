<?php

/**
 * CitationTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class CitationTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object CitationTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Citation');
    }
    
  public static function buidHash($quote) {
  	$text = $quote;
  	
	  // replace non letter or digits by -
	  $text = preg_replace('~[^\\pL\d]+~u', ' ', $text);
	 
	  // trim
	  $text = trim($text, '-');
	 
	  // transliterate
	  if (function_exists('iconv'))
	  {
	    $text = iconv('utf-8', 'us-ascii//TRANSLIT', $text);
	  }
	 
	  // lowercase
	  $text = strtolower($text);
	 
	  // remove unwanted characters
	  $text = preg_replace('~[^-\w]+~', ' ', $text);
	  
    $text = str_replace(' ', '-', $text);
    $hash = trim($text, '-');
    
    return $hash;
  }
    
  public static function addCitation($quote) {
  	
  		$is_new = false;
  	
      if ($quote['quote'] != '')
      {
      	$hash = CitationTable::buidHash($quote['quote']);
      	
        $citations = Doctrine::getTable('Citation')->findByHash($hash);
        if (count($citations) == 0)
        {
          $is_new = true;
          
          $Citation = new Citation;
          $Citation->quote = trim($quote['quote']);
          
        	$author = Doctrine::getTable('Author')->findOneByName($quote['author']);
          $Citation->author_id = $author->id;
          
          $Citation->last_published_at  = '0000-00-00 00:00:00';
          $Citation->is_active = true;
          $Citation->hash = $hash;
        } else {
        	$Citation = $citations[0];
          $Citation->note = $Citation->note + 1;
        }
      
           
	    if (array_key_exists('source', $quote) && ($quote['source'] == ''))
	     $Citation->source = $quote['source'];
	    
	    $Citation->save();
	    $Citation->addTags($quote['tags']);
	    $Citation->setSlug();
	    $Citation->save();
			$Citation->free(true);
    }
    
		return $is_new;
  }
}